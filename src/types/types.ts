export interface Cell {
  value: number;
  row: number;
  col: number;
  isSelected: boolean;
}

export interface Pair {
  cell1: Cell;
  cell2: Cell;
  type: 'sum' | 'difference';
  found: boolean;
}

export interface GameState {
  targetNumber: number;
  selectedCells: Cell[];
  score: number;
  lastAttemptSuccess: boolean | null;
  level: number;
  foundPairs: Pair[];
  isTimeMode: boolean;
  timeLeft: number; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  totalFoundPairs: number;
  user: User | null;
}

export interface LevelConfig {
  size: number;
  maxNumber: number;
  maxTarget: number;
}

export const GAME_TIME = 180; // 3 –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
export const CORRECT_POINTS = 10;
export const MISTAKE_PENALTY = -15;

export const LEVELS: Record<number, LevelConfig> = {
  1: { size: 3, maxNumber: 10, maxTarget: 10 },
  2: { size: 4, maxNumber: 10, maxTarget: 10 },
  3: { size: 5, maxNumber: 10, maxTarget: 10 },
  4: { size: 5, maxNumber: 20, maxTarget: 20 },
  5: { size: 6, maxNumber: 20, maxTarget: 20 }
};

export interface Achievement {
  id: string;
  title: string;
  description: string;
  requiredStreak: number;
  level: number;
  icon: string;
}

export interface UserAchievement {
  achievementId: string;
  unlockedAt: number;
  level: number;
}

export interface User {
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  displayName?: string;
  achievements?: UserAchievement[];
}

export const ACHIEVEMENTS: Achievement[] = [
  {
    id: 'score_5',
    title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
    description: '5 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
    requiredStreak: 5,
    level: 1,
    icon: 'üåü'
  },
  {
    id: 'score_10',
    title: '–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫',
    description: '10 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
    requiredStreak: 10,
    level: 1,
    icon: 'üéØ'
  },
  {
    id: 'score_25',
    title: '–û–ø—ã—Ç–Ω—ã–π —Å—á–µ—Ç–æ–≤–æ–¥',
    description: '25 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
    requiredStreak: 25,
    level: 1,
    icon: 'üéØüéØ'
  },
  {
    id: 'score_50',
    title: '–ú–∞—Å—Ç–µ—Ä —á–∏—Å–µ–ª',
    description: '50 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
    requiredStreak: 50,
    level: 1,
    icon: 'üèÜ'
  },
  {
    id: 'score_100',
    title: '–õ–µ–≥–µ–Ω–¥–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
    description: '100 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
    requiredStreak: 100,
    level: 1,
    icon: 'üëë'
  },
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
  ...[2, 3, 4, 5].flatMap(level => [
    {
      id: `score_5_level_${level}`,
      title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      description: '5 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
      requiredStreak: 5,
      level,
      icon: 'üåü'
    },
    {
      id: `score_10_level_${level}`,
      title: '–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫',
      description: '10 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
      requiredStreak: 10,
      level,
      icon: 'üéØ'
    },
    {
      id: `score_25_level_${level}`,
      title: '–û–ø—ã—Ç–Ω—ã–π —Å—á–µ—Ç–æ–≤–æ–¥',
      description: '25 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
      requiredStreak: 25,
      level,
      icon: 'üéØüéØ'
    },
    {
      id: `score_50_level_${level}`,
      title: '–ú–∞—Å—Ç–µ—Ä —á–∏—Å–µ–ª',
      description: '50 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
      requiredStreak: 50,
      level,
      icon: 'üèÜ'
    },
    {
      id: `score_100_level_${level}`,
      title: '–õ–µ–≥–µ–Ω–¥–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
      description: '100 –ø–∞—Ä –ø–æ–¥—Ä—è–¥',
      requiredStreak: 100,
      level,
      icon: 'üëë'
    }
  ])
];

export interface LeaderboardEntry {
  id?: string;
  userId: string;
  displayName: string;
  score: number;
  level: number;
  foundPairs: number;
  timestamp: number;
} 